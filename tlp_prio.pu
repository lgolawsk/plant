```plantuml("S3M IBL FW TLP prioritized decode")

@startuml
title TLP initialization wo priorities
start
:TLP range initilization;
:check for new range overlap\nwith existing ranges\nin case of overlap only warning message;
:end;
end

@startuml
title Flash update current
skinparam componentStyle rectangle
component erase_data
component write_data
component verify_data

[erase_data] -- [write_data]
[write_data] -- [verify_data]

@enduml

@startuml
title Flash update current
skinparam componentStyle rectangle
component read_data
component erase_data
component write_data
component verify_data

[read_data] -- [erase_data] : compare data at flash with image to update
[erase_data] -- [write_data]
[write_data] -- [verify_data]

@enduml

@startuml
title Flash update hash
skinparam componentStyle rectangle
component calculate_flash_hashes
component erase_data
component write_data
component verify_data_hash_compare
[calculate_flash_hashes] -- [erase_data] : compare flash hashes with image hashes
[erase_data] -- [write_data]
[write_data] -- [verify_data_hash_compare]

@enduml

@startuml
title Flash update chunk compare
skinparam componentStyle rectangle
component erase_data
component write_data_with_compare

[erase_data] -- [write_data_with_compare]

@enduml


@startuml
title TLP priority based initialization
start
:TLP range initilization\n(with additional priority paramter);
:check for new range overlap\nwith existing ranges;
partition priority based {
if (overlap found) then (yes)
    :set overlap indicator\nfor conflicted ranges;
else (no)

endif
}
:end;
end
@enduml


@enduml
@startuml
title TLP decode wo priority
start
:tlp decode called;
:binary search over initialized ranges;
end
@enduml


@enduml
@startuml
title TLP priority based decode
start
:tlp decode called;
:binary search over initialized ranges;
partition priority based {
if (overlap indicator set for found range) then (yes)
    :search over ranges with set priority indicator\nand choose range based on priority;
else (no)
endif
}
end
@enduml
